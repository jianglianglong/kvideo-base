<?xml version="1.0" encoding="UTF-8"?>

<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->

<configuration status="warn">
    <Properties>
        <Property name="logdir">/Users/lianglongjiang/IdeaProjects/logs/kvideo</Property>
        <Property name="ROOT_PATTERN">%d{HH:mm:ss.SSS} [%thread] %level [%C{1.}.%M:%L] - %msg%xEx%n</Property>
        <Property name="NAME_PATTERN">%d{HH:mm:ss.SSS} [%thread] %level [%C.%M:%L] - %msg%xEx%n</Property>
    </Properties>

    <!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
    <!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
    <!--输出日志的格式
     %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
     %p : 日志输出格式
     %c : logger的名称
     %m : 日志内容，即 logger.info("message")
     %n : 换行符
     %C : Java类名
     %L : 日志输出所在行数
     %M : 日志输出所在方法名
     hostName : 本地机器名
     hostAddress : 本地ip地址 -->

    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="consoleAppender" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${NAME_PATTERN}"/>
        </Console>

        <RollingRandomAccessFile name="rootAppender"
                                 fileName="${logdir}/root.log"
                                 filePattern="${logdir}/root.log.%d{yyyy-MM-dd}.gz">
            <PatternLayout pattern="${ROOT_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <ThresholdFilter level="INFO"/>
        </RollingRandomAccessFile>

       <!-- <RollingFile name="rootAppender"
                     fileName="${logdir}/root.log"
                     filePattern="${logdir}/root.log.%d{yyyy-MM-dd}.gz">
            &lt;!&ndash;控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）&ndash;&gt;
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${ROOT_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile>-->

    </appenders>
    <loggers>
        <root level="info">
            <appender-ref ref="consoleAppender" />
<!--            <appender-ref ref="rootAppender"  />-->
        </root>
    </loggers>
</configuration>


<!--
<configuration status="WARN" monitorInterval="30">
&lt;!&ndash;先定义所有的appender&ndash;&gt;
<appenders>

    &lt;!&ndash;文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用&ndash;&gt;
    <File name="log" fileName="log/test.log" append="false">
        <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
    </File>
    &lt;!&ndash; 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档&ndash;&gt;
    <RollingFile name="RollingFileInfo" fileName="${sys:user.home}/logs/info.log"
                 filePattern="${sys:user.home}/logs/?{date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
        &lt;!&ndash;控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）&ndash;&gt;
        <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
        <Policies>
            <TimeBasedTriggeringPolicy/>
            <SizeBasedTriggeringPolicy size="100 MB"/>
        </Policies>
    </RollingFile>
    <RollingFile name="RollingFileWarn" fileName="${sys:user.home}/logs/warn.log"
                 filePattern="${sys:user.home}/logs/?{date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
        <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
        <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
        <Policies>
            <TimeBasedTriggeringPolicy/>
            <SizeBasedTriggeringPolicy size="100 MB"/>
        </Policies>
        &lt;!&ndash; DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 &ndash;&gt;
        <DefaultRolloverStrategy max="20"/>
    </RollingFile>
    <RollingFile name="RollingFileError" fileName="${sys:user.home}/logs/error.log"
                 filePattern="${sys:user.home}/logs/?{date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
        <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
        <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
        <Policies>
            <TimeBasedTriggeringPolicy/>
            <SizeBasedTriggeringPolicy size="100 MB"/>
        </Policies>
    </RollingFile>
</appenders>
&lt;!&ndash;然后定义logger，只有定义了logger并引入的appender，appender才会生效&ndash;&gt;
<loggers>
    &lt;!&ndash;过滤掉spring和mybatis的一些无用的DEBUG信息&ndash;&gt;
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.mybatis" level="INFO"/>
    <root level="all">
        <appender-ref ref="Console"/>
        <appender-ref ref="RollingFileInfo"/>
        <appender-ref ref="RollingFileWarn"/>
        <appender-ref ref="RollingFileError"/>
    </root>
</loggers>
</configuration>-->
